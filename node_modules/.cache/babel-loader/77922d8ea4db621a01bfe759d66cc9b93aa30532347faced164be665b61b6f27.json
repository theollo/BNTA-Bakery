{"ast":null,"code":"var _jsxFileName = \"/Users/theolloyd/bnta_work/week_09/day_3/BNTA_Bakery/src/cake/CakeContainer.js\";\nimport { useState } from \"react\";\nimport Cake from \"./Cake.js\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst CakeContainer = () => {\n  const listOfCakes = [{\n    cakeName: \"Victoria Sponge\",\n    ingredients: [\"eggs\", \"butter\", \"sugar\", \"self-raising flour\", \"baking powder\", \"milk\"],\n    price: 5,\n    rating: 5\n  }, {\n    cakeName: \"Tea Loaf\",\n    ingredients: [\"eggs\", \"oil\", \"dried fruit\", \"sugar\", \"self-raising flour\", \"strong tea\"],\n    price: 2,\n    rating: 3\n  }, {\n    cakeName: \"Carrot Cake\",\n    ingredients: [\"carrots\", \"walnuts\", \"oil\", \"cream cheese\", \"flour\", \"sugar\"],\n    price: 8,\n    rating: 5\n  }];\n  const cakeComponents = listOfCakes.map((cake, index) => /*#__PURE__*/_jsxDEV(Cake, {\n    cake: cake\n  }, index, false, {\n    fileName: _jsxFileName,\n    lineNumber: 48,\n    columnNumber: 4\n  }, this));\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: cakeComponents\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 51,\n    columnNumber: 9\n  }, this);\n};\n_c = CakeContainer;\nexport default CakeContainer;\nvar _c;\n$RefreshReg$(_c, \"CakeContainer\");","map":{"version":3,"names":["useState","Cake","jsxDEV","_jsxDEV","CakeContainer","listOfCakes","cakeName","ingredients","price","rating","cakeComponents","map","cake","index","fileName","_jsxFileName","lineNumber","columnNumber","children","_c","$RefreshReg$"],"sources":["/Users/theolloyd/bnta_work/week_09/day_3/BNTA_Bakery/src/cake/CakeContainer.js"],"sourcesContent":["import { useState } from \"react\";\nimport Cake from \"./Cake.js\";\n\nconst CakeContainer = () => {\n\tconst listOfCakes = [\n\t  {\n\t\tcakeName: \"Victoria Sponge\",\n\t\tingredients: [\n\t\t  \"eggs\",\n\t\t  \"butter\",\n\t\t  \"sugar\",\n\t\t  \"self-raising flour\",\n\t\t  \"baking powder\",\n\t\t  \"milk\"\n\t\t],\n\t\tprice: 5,\n\t\trating: 5\n\t  },\n\t  {\n\t\tcakeName: \"Tea Loaf\",\n\t\tingredients: [\n\t\t  \"eggs\",\n\t\t  \"oil\",\n\t\t  \"dried fruit\",\n\t\t  \"sugar\",\n\t\t  \"self-raising flour\",\n\t\t  \"strong tea\",\n\t\t],\n\t\tprice: 2,\n\t\trating: 3\n\t  },\n\t  {\n\t\tcakeName: \"Carrot Cake\",\n\t\tingredients: [\n\t\t  \"carrots\",\n\t\t  \"walnuts\",\n\t\t  \"oil\",\n\t\t  \"cream cheese\",\n\t\t  \"flour\",\n\t\t  \"sugar\",\n\t\t],\n\t\tprice: 8,\n\t\trating: 5\n\t  }\n\t];\n  \n\tconst cakeComponents = listOfCakes.map((cake, index) => (\n\t  <Cake key={index} cake={cake} />\n\t));\n  \n\treturn <div>{cakeComponents}</div>;\n  };\n  \n  export default CakeContainer;"],"mappings":";AAAA,SAASA,QAAQ,QAAQ,OAAO;AAChC,OAAOC,IAAI,MAAM,WAAW;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE7B,MAAMC,aAAa,GAAGA,CAAA,KAAM;EAC3B,MAAMC,WAAW,GAAG,CAClB;IACDC,QAAQ,EAAE,iBAAiB;IAC3BC,WAAW,EAAE,CACX,MAAM,EACN,QAAQ,EACR,OAAO,EACP,oBAAoB,EACpB,eAAe,EACf,MAAM,CACP;IACDC,KAAK,EAAE,CAAC;IACRC,MAAM,EAAE;EACP,CAAC,EACD;IACDH,QAAQ,EAAE,UAAU;IACpBC,WAAW,EAAE,CACX,MAAM,EACN,KAAK,EACL,aAAa,EACb,OAAO,EACP,oBAAoB,EACpB,YAAY,CACb;IACDC,KAAK,EAAE,CAAC;IACRC,MAAM,EAAE;EACP,CAAC,EACD;IACDH,QAAQ,EAAE,aAAa;IACvBC,WAAW,EAAE,CACX,SAAS,EACT,SAAS,EACT,KAAK,EACL,cAAc,EACd,OAAO,EACP,OAAO,CACR;IACDC,KAAK,EAAE,CAAC;IACRC,MAAM,EAAE;EACP,CAAC,CACF;EAED,MAAMC,cAAc,GAAGL,WAAW,CAACM,GAAG,CAAC,CAACC,IAAI,EAAEC,KAAK,kBACjDV,OAAA,CAACF,IAAI;IAAaW,IAAI,EAAEA;EAAK,GAAlBC,KAAK;IAAAC,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAAe,CAChC,CAAC;EAEF,oBAAOd,OAAA;IAAAe,QAAA,EAAMR;EAAc;IAAAI,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAAM,CAAC;AACjC,CAAC;AAACE,EAAA,GAhDEf,aAAa;AAkDjB,eAAeA,aAAa;AAAC,IAAAe,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}